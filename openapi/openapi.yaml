openapi: 3.0.2
info:
  title: Northbound REST API DNOR
  description: |-
    API definitions for programmatic access to DriveNets Network Orchestrator (DNOR). The API calls are modelled after, and reflected in the DNOR User Interface.

    When you first sign up with the SSP, a POST API request (/auth/login) is sent with the following payload:

      *{"username":"user@company.com"*,*"password":"mypass"*}, **where** *“user@company.com”* and *“mypass”* are the email address and password you provided during sign up.

      The API call returns a token value. This is the authorization token for your account. This token is sent in the header of all API requests, as follows:
      1. Authorization: Bearer <token-value>
      The REST API enables you to interact with the SP systems to provision services for your organization from your server-side applications.
      2. Some other text

      ## H2 Heading

      This is also an example of an unordered list:
      - Some item
      - Another item

      ### H3 Heading

      #### H4 Heading

      Here is a link: (I copied)

        [Dinosuars](https://en.wikipedia.org/wiki/Dinosaurs)

      The [New Horizons](http://pluto.jhuapl.edu/) space probe took photos of Pluto.

    Now for my next trick, I will add an image :)

    This image is form a site called Lorem Picsum....

    ![True colour image](https://picsum.photos/200/300)

  version: v7.0.6
servers:
  - url: http://localhost
tags:
  - name: Northbound REST API
paths:
  /api/login:
    post:
      summary: User login
      tags:
        - Authentication
      description: Use DNOR credentials to log into DNOR. If you dont have credentials contacted your system administrator.
      requestBody:
        description: Login credentials<br/>
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                  example: superadmin
                password:
                  type: string
                  example: superadmin
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: New token created!
                  token:
                    type: string
                    example: eyJhbGciOiJIUz...
        "403":
          description: Incorrect username / password
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Incorrect credentials
  /api/logout:
    post:
      security:
        - Authentication: []
      summary: User logout
      tags:
        - Authentication
      description: Use DNOR credentials to log out of DNOR.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User session logout succeeded
        "403":
          description: Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error!
  /api/nce-management/deploy:
    post:
      security:
        - Authentication: []
      summary: Create NCE
      tags:
        - NCE Management
      description: Deploy DNOS to create an NCE.
      requestBody:
        description: NCE Configuration. (Click Schema to display the element descriptions)
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - oobIpv4Address
                - oobIpv4Subnet
                - candidateDNOSYaml
                - inBandIpv4Address
                - inBandIpv4Subnet
                - formation
                - nccs
              properties:
                name:
                  allOf:
                    - $ref: "#/components/schemas/nameType"
                    - description: >-
                        NCE name. Use numbers and / or letters. The name must be
                        at least four characters in length. No special
                        characters such as !@#$ can be used
                candidateDNOSYaml:
                  type: string
                  example: v13.0
                  description: DNOS version, for example 11.1
                oobIpv4Address:
                  oneOf:
                    - $ref: "#/components/schemas/ipv4"
                    - $ref: "#/components/schemas/dhcp"
                  example: Acquired
                  description: "mgmt0 IPv4 address: (X.X.X.X/Acquired) Acquired - DHCP mode."
                oobIpv4Subnet:
                  allOf:
                    - $ref: "#/components/schemas/ipv4PrefixLength"
                    - description: >-
                        mgmt0 IPv4 prefix length. System ignores oobIpv4Subnet
                        in DHCP mode.
                oobIpv6Address:
                  oneOf:
                    - $ref: "#/components/schemas/ipv6"
                    - $ref: "#/components/schemas/dhcp"
                  example: Acquired
                  description: >-
                    mgmt0 IPv6 address: (CAFE::1/Acquired). Acquired - DHCP
                    mode. If oobIpv6Address is not specified mgmt0 IPv6 address
                    will not be set.
                oobIpv6Subnet:
                  allOf:
                    - $ref: "#/components/schemas/ipv6PrefixLength"
                    - description: >-
                        mgmt0 IPv6 subnet mask. System ignores oobIpv6Subnet
                        incase DHCP mode or oobIpv6Address is not specified
                oobIpv4DefaultGateway:
                  allOf:
                    - $ref: "#/components/schemas/ipv4"
                    - description: Default gateway IPv4 address for the OOB mgmt inteface
                oobIpv6DefaultGateway:
                  allOf:
                    - $ref: "#/components/schemas/ipv6"
                    - description: Default gateway IPv6 address for the OOB mgmt inteface
                inBandIpv4Address:
                  allOf:
                    - description: >-
                        Monitoring channel - Lo-0 IPv4 address (X.X.X.X). There
                        must be at least one IPv4 or IPv6 VIP Out of Band
                        address
                    - $ref: "#/components/schemas/ipv4"
                inBandIpv4Subnet:
                  allOf:
                    - $ref: "#/components/schemas/ipv4PrefixLength"
                    - description: Monitoring channel - Lo-0 IPv4 subnet mask
                inBandIpv6Address:
                  allOf:
                    - $ref: "#/components/schemas/ipv6"
                    - description: >-
                        Monitoring channel - Lo-0 IPv6 address (CAFE::1). There
                        must be at least one IPv4 or IPv6 VIP Out of Band
                        address
                inBandIpv6Subnet:
                  allOf:
                    - $ref: "#/components/schemas/ipv6PrefixLength"
                    - description: Monitoring channel - Lo-0 IPv6 subnet mask
                minimumNccs:
                  allOf:
                    - $ref: "#/components/schemas/minimumNccType"
                    - description: >-
                        [1-2], Minimum number of registred NCCs to start the
                        deployment
                siteId:
                  allOf:
                    - $ref: "#/components/schemas/uuid"
                    - description: NCE site
                configurationData:
                  type: object
                  properties:
                    filename:
                      type: string
                      description: configuration file name
                      example: baseConfig.xml
                    username:
                      type: string
                      example: dnroot
                      description: user name of for configuration commit
                    configurationId:
                      allOf:
                        - $ref: "#/components/schemas/uuid"
                        - description: configuration transaction id
                formation:
                  type: object
                  properties:
                    type:
                      allOf:
                        - $ref: "#/components/schemas/formationType"
                        - description: "NCE formation: Single or Cluster"
                    specific:
                      allOf:
                        - $ref: "#/components/schemas/specificType"
                        - description: >-
                            NCE type:
                            SA-40C/SA-10CD/SA-32CD/SA-36CD/SA-64XXV8C/SA-64X12C-S/CL-16/CL-96/CL-32/CL-48/CL-64/CL-76/CL-192
                nccs:
                  type: array
                  minItems: 1
                  items:
                    type: object
                    required:
                      - serialNumber
                      - nccId
                    properties:
                      serialNumber:
                        type: string
                        description: >-
                          NCC serial number <br /><B> Note: </B> To add an
                          addiitonal NCC, duplicate this array and add the new
                          NCC serial number and the NCC-ID
                      nccId:
                        type: number
                        minimum: 0
                        maximum: 1
                        description: >-
                          NCC-ID: [0-1]. If the NCE type is not a Standalone
                          formation, you can add upto 2 NCCs. One with an ID of
                          0, and the other with an ID of 1
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Starting deployment
                  processId:
                    $ref: "#/components/schemas/uuid"
                  clusterId:
                    $ref: "#/components/schemas/uuid"
          description: Starting deployment
        "403":
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Deployment failed
          description: Deployment failed
